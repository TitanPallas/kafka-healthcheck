# values.yml for KRaft mode

kafka:
  enabled: true
  zookeeper:
    enabled: false

  auth:
    enabled: true
    superUsers:
      - user: "admin"
        password: "adminPassword"
    clients:
      - user: "user1"
        password: "vgJSL9Uh6Y"

  configurationOverrides:
    server:
      super.users: "User:admin;User:user1"
      process.roles: "broker,controller"
      node.id: "1"
      controller.quorum.voters: "1@localhost:9093"
      listener.security.protocol.map: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL"
      inter.broker.listener.name: "PLAINTEXT"
      controller.listener.names: "CONTROLLER"
      listeners: "PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093"
      log.dirs: "/var/lib/kafka/data"
      zookeeper.set.acl: "false"
      sasl.enabled.mechanisms: "PLAIN,SCRAM-SHA-256,SCRAM-SHA-512"
      listener.name.sasl.mechanisms: "PLAIN"
      listener.name.sasl.plain.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='user1' password='vgJSL9Uh6Y';"

topicOperator:
  enabled: true
  create:
    topics:
      - name: "health_checks_topic"
        partitions: 1
        replicationFactor: 1
        config:
          retention.ms: 604800000
          segment.bytes: 1073741824

metrics:
  kafka:
    enabled: true
  jmx:
    enabled: true

service:
  type: ClusterIP
  port: 9092

resources:
  requests:
    memory: "2Gi"
    cpu: "1000m"
  limits:
    memory: "4Gi"
    cpu: "2000m"

persistence:
  enabled: true
  storageClass: "standard"
  accessModes:
    - ReadWriteOnce
  size: 100Gi

rbac:
  create: true

podSecurityContext:
  fsGroup: 1001

securityContext:
  runAsUser: 1001

nodeSelector: {}

tolerations: []

affinity: {}
